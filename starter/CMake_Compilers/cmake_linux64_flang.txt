######################################### 
#       STARTER - INTEL COMPILER
#########################################

# ---------------
# Executable name
# ---------------

set ( RELNAME ${arch}  )

# General machine flag setting
set ( cppmach "-DCPP_mach=CPP_p4linux964" )
set ( cpprel  "-DCPP_rel=00" )

# ---------------------
# Third party libraries
# ---------------------

#Metis
set (metis "${source_directory}/../extlib/metis/linux64/libmetis_linux64_gcc.a")

#hm_reader
if ( USE_OPEN_READER STREQUAL 1 )
       set ( reader_lib "-L${OPEN_READER_ROOT}/libopen_reader/linux64 -lopen_reader_linux64")
else ()
       set ( reader_lib "-L${source_directory}/../extlib/hm_reader/linux64/ -lhm_reader_linux64 -lapr-1 " )
endif()

#ZLIB
set (zlib_inc "-I${source_directory}/../extlib/zlib/linux64/include")
set (zlib_lib "${source_directory}/../extlib/zlib/linux64/lib/libz.a")

#lapack
set (lapack_lib "${source_directory}/../extlib/lapack-3.10.0/lib_linux64_gf/liblapack.a ${source_directory}/../extlib/lapack-3.10.0/lib_linux64_gf/librefblas.a  ${source_directory}/../extlib/lapack-3.10.0/lib_linux64_gf/libtmglib.a")

#metis
set (metis_lib "${source_directory}/../extlib/metis/linux64/libmetis_linux64_gcc.a")



# --------------
# compiler Flags
# --------------
set (CMAKE_Fortran_FLAGS " " )
set (CMAKE_C_FLAGS " " )
set (CMAKE_CPP_FLAGS " " )
set (CMAKE_CXX_FLAGS " " )

set (CMAKE_Fortran_FLAGS_DEBUG " " )
set (CMAKE_Fortran_FLAGS_RELEASE " " )

set (CMAKE_C_FLAGS_DEBUG " " )
set (CMAKE_C_FLAGS_RELEASE " " )

set (CMAKE_CPP_FLAGS_DEBUG " " )
set (CMAKE_CPP_FLAGS_RELEASE " " )

set (CMAKE_CXX_FLAGS_DEBUG " " )
set (CMAKE_CXX_FLAGS_RELEASE " " )


# -------------------------
# Single / Double Precision
# -------------------------
if (precision STREQUAL "sp")
  set (precision_flag "-DMYREAL4")
else (precision STREQUAL "sp")
  set (precision_flag "-DMYREAL8")
endif (precision STREQUAL "sp")

# -----------------
# Modules directory
# -----------------

unset(CMAE_Fortran_MODDIR_FLAG)
set(CMAKE_Fortran_MODDIR_FLAG "-J ${CMAKE_Fortran_MODULE_DIRECTORY}")  # Space after -J
message(STATUS "Fortran module directory: ${CMAKE_Fortran_MODULE_DIRECTORY}")

# -------------------------
# Generic Compilation flags
# -------------------------

if ( debug STREQUAL "1" )

# Debug compilation
  set(fortran_flags "${precision_flag} ${Tet_mesher_inc} ${cppmach} ${cpprel} -DCPP_comp=f90  -DCOMP_LLVM -O0 -g -ffixed-line-length-132  -fno-implicit-none ${ADF}")
  set(c_flags       "${precision_flag} ${Tet_mesher_inc} ${cppmach} ${cpprel} ${zlib_inc} -O0 -g  ")
  set(cpp_flags     "${precision_flag} ${Tet_mesher_inc} ${cppmach} ${cpprel} ${zlib_inc} -O0 -g  -std=c++11")

else()

# Optimized compilation
set(fortran_flags "${precision_flag} ${Tet_mesher_inc} ${cppmach} ${cpprel} -DCPP_comp=f90  -DCOMP_LLVM -O2 -fno-fast-math -ffixed-line-length-132  -fno-implicit-none ${ADF}")
set(c_flags       "${precision_flag} ${Tet_mesher_inc} ${cppmach} ${cpprel} ${zlib_inc} " )
set(cpp_flags     "${precision_flag} ${Tet_mesher_inc} ${cppmach} ${cpprel} ${zlib_inc}  -O2  -Wno-deprecated -fpermissive -std=c++11 -fPIC")

endif()


# Fortran
set_source_files_properties( ${source_files}  PROPERTIES COMPILE_FLAGS "${fortran_flags}")
  
# C source files
set_source_files_properties(${c_source_files} PROPERTIES COMPILE_FLAGS "${c_flags}")
  
# CXX source files
set_source_files_properties(${cpp_source_files} PROPERTIES COMPILE_FLAGS "${cpp_flags}" )

# Linking flags
set (CMAKE_EXE_LINKER_FLAGS "  -rdynamic -no-pie  -O2  " )

#Libraries
#set (LINK "dl ${xml_lib} ${metis} ${reader_lib}  ${lapack_lib} ${Tet_mesher_lib} ${zlib_lib} ${asan_link} -ldl -rdynamic -lstdc++ -llapack -lgfortran"  )
set (LINK "dl ${xml_lib} ${metis} ${reader_lib} ${lapack_lib} ${Tet_mesher_lib} ${zlib_lib} ${asan_link} -ldl -rdynamic -lstdc++ -lgfortran")



# -------------------------------------------------------------------------------------------------------------------------------------------
# Specific set of compilation flag

set (F_O0_compiler_flags " ${precision_flag} ${cppmach} ${cpprel}  -ffixed-line-length-132 -O0 -mcmodel=large   -fno-fast-math ${ADF}")
set (F_O1_compiler_flags " ${precision_flag} ${cppmach} ${cpprel}  -ffixed-line-length=132 -O1   -fno-fast-math ${ADF}")

if ( debug STREQUAL "0" )
# flags for optimized binary
#nbsph.F
set_source_files_properties( ${source_directory}/source/elements/sph/nbsph.F PROPERTIES COMPILE_FLAGS ${F_O1_compiler_flags} )

set_source_files_properties( ${source_directory}/source/output/message/inimsg.F PROPERTIES COMPILE_FLAGS ${F_O0_compiler_flags} )
#lectur.F
set_source_files_properties( ${source_directory}/source/starter/lectur.F PROPERTIES COMPILE_FLAGS ${F_O1_compiler_flags} )

set (C_BASIC "${cppmach} ${cpprel}" )
set_source_files_properties( ${source_directory}/source/output/tools/ieee.cpp PROPERTIES COMPILE_FLAGS " -O1 ${C_BASIC}")


endif()
set_source_files_properties( ${source_directory}/source/system/rad_sys_call.c PROPERTIES COMPILE_FLAGS "${precision_flag} -std=c90 ${cppmach} ${cpprel} ")

#compiler bug fix
set_source_files_properties( ${source_directory}/source/output/anim/ani_fasolfr.F PROPERTIES COMPILE_FLAGS ${F_O0_compiler_flags} )


if ( no_python STREQUAL "1" )
get_source_file_property(existing_flags ${source_directory}/../common_source/modules/cpp_python_funct.cpp COMPILE_FLAGS)
set_source_files_properties( ${source_directory}/../common_source/modules/cpp_python_funct.cpp PROPERTIES COMPILE_FLAGS  "${existing_flags} -DPYTHON_DISABLED" )
else()
endif()


